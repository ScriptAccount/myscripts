-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local i1i1i1I11i1lIilll11 = assert local illi1IIlli1Il1lII1I = select local i1IIlli1IIi1II1liil = tonumber local IlIilIIIl1il1III11I = unpack local I11iliil111lii1l1iI = pcall local IlililI1lI1iilliIli = setfenv local lIli1lI1i1lI111l1I11I = setmetatable local liiili1II1iiIlIi111 = type local lIlII11IIll1l1lli1li1 = getfenv local lIlliiiI1lil111i1liII = tostring local liilIillli1I11II1lI = error local ii1illl1l1lii1iIlIl = string.sub local iii1III1iIiIllll1il = string.byte local IiI1Iii11iiil1lIl11 = string.char local iIll11lIIiliI1Iilll = string.rep local Iil11liiiiII1lI1ilI = string.gsub local i1liI1lIiiI1lil11Il = string.match local Ii11lIiIiiIIi1Ii1i1 = table.insert local lIlIll1ii1IIIil1IiiII = iii1III1iIiIllll1il("{", 1) local I1iIli1iIIii1ii1I1I, iI1IIIll1lllIIIiIl1 = #{4173}, #{ 1790, 3275, 6890, 6388, 6930, 2345, 6654, 4298, 2926, 2981, 1349, 2565, 4702, 5515, 6878, 5216, 6521, 884, 3676, 1952, 4285, 1009 } + lIlIll1ii1IIIil1IiiII + 130926 local l1Ii1IiII1iIlIiI1iI = {} local IIll111iI1iIlIiillI = 1 local lIlli1ili111lil11l11i, iil1i1lI1IiI1I1ilII local function lIlIil11IiI11llIlliI1(llIII1IiIII11i11ili, IlIill1iliIlIiIil11) local iiil1Iil1lli1liI1l1 llIII1IiIII11i11ili = Iil11liiiiII1lI1ilI(ii1illl1l1lii1iIlIl(llIII1IiIII11i11ili, 5), "..", function(Iilll1ll11iiIllIlii) if iii1III1iIiIllll1il(Iilll1ll11iiIllIlii, 2) == 72 then iiil1Iil1lli1liI1l1 = i1IIlli1IIi1II1liil(ii1illl1l1lii1iIlIl(Iilll1ll11iiIllIlii, 1, 1)) return "" else local iliil1il1Il11iii1Ii = IiI1Iii11iiil1lIl11(i1IIlli1IIi1II1liil(Iilll1ll11iiIllIlii, 16)) if iiil1Iil1lli1liI1l1 then local lIlllI1Il1lil1iI1iill = iIll11lIIiliI1Iilll(iliil1il1Il11iii1Ii, iiil1Iil1lli1liI1l1) iiil1Iil1lli1liI1l1 = nil return lIlllI1Il1lil1iI1iill else return iliil1il1Il11iii1Ii end end end) local function iI1ili1IIl1liIi111I() local ilI1il1I1II1iI1ii1l = iii1III1iIiIllll1il(llIII1IiIII11i11ili, IIll111iI1iIlIiillI, IIll111iI1iIlIiillI) IIll111iI1iIlIiillI = IIll111iI1iIlIiillI + 1 return ilI1il1I1II1iI1ii1l end local function I1lliIIIIl11l1I1I11() local ilI1il1I1II1iI1ii1l, iliil1il1Il11iii1Ii, lIlllI1Il1lil1iI1iill, lIl1ll1I1II11IlIilIlI = iii1III1iIiIllll1il(llIII1IiIII11i11ili, IIll111iI1iIlIiillI, IIll111iI1iIlIiillI + 3) IIll111iI1iIlIiillI = IIll111iI1iIlIiillI + 4 return lIl1ll1I1II11IlIilIlI * 16777216 + lIlllI1Il1lil1iI1iill * 65536 + iliil1il1Il11iii1Ii * 256 + ilI1il1I1II1iI1ii1l end local function i1IliiI1llllIiiIliI(lIlI1iiIll1lIllIiiI1i, ii1llI1i1iI1l1iIlil, l11Iil1I1lIiIlIiIii) if l11Iil1I1lIiIlIiIii then local l11I1iIiiIll1liii1l, l1iIililililliIii1i = 0, 0 for lIl11l1iI11liIllIl1i1 = ii1llI1i1iI1l1iIlil, l11Iil1I1lIiIlIiIii do l11I1iIiiIll1liii1l = l11I1iIiiIll1liii1l + 2 ^ l1iIililililliIii1i * i1IliiI1llllIiiIliI(lIlI1iiIll1lIllIiiI1i, lIl11l1iI11liIllIl1i1) l1iIililililliIii1i = l1iIililililliIii1i + 1 end return l11I1iIiiIll1liii1l else local lIliIII1l1IliIilIIli1 = 2 ^ (ii1llI1i1iI1l1iIlil - 1) return lIliIII1l1IliIilIIli1 <= lIlI1iiIll1lIllIiiI1i % (lIliIII1l1IliIilIIli1 + lIliIII1l1IliIilIIli1) and 1 or 0 end end local function IiIIii1IIiIIlliiiiI() local ilI1il1I1II1iI1ii1l, iliil1il1Il11iii1Ii = I1lliIIIIl11l1I1I11(), I1lliIIIIl11l1I1I11() if ilI1il1I1II1iI1ii1l == 0 and iliil1il1Il11iii1Ii == 0 then return 0 end return (-2 * i1IliiI1llllIiiIliI(iliil1il1Il11iii1Ii, 32) + 1) * 2 ^ (i1IliiI1llllIiiIliI(iliil1il1Il11iii1Ii, 21, 31) - 1023) * ((i1IliiI1llllIiiIliI(iliil1il1Il11iii1Ii, 1, 20) * 4294967296 + ilI1il1I1II1iI1ii1l) / 4503599627370496 + 1) end local i1iii1I1iiI1lII11Ii = bit or bit32 local lIiIii1IIl11ilIlliI = i1iii1I1iiI1lII11Ii and i1iii1I1iiI1lII11Ii.bxor or function(ilI1il1I1II1iI1ii1l, iliil1il1Il11iii1Ii) local IIiIli1I1li11iI111I = 1 local lIlllI1Il1lil1iI1iill = 0 while ilI1il1I1II1iI1ii1l > 0 and iliil1il1Il11iii1Ii > 0 do local I1IiIlI1lIllI1I1liI = ilI1il1I1II1iI1ii1l % 2 local iili1l11liiiI1il1il = iliil1il1Il11iii1Ii % 2 if I1IiIlI1lIllI1I1liI ~= iili1l11liiiI1il1il then lIlllI1Il1lil1iI1iill = lIlllI1Il1lil1iI1iill + IIiIli1I1li11iI111I end ilI1il1I1II1iI1ii1l = (ilI1il1I1II1iI1ii1l - I1IiIlI1lIllI1I1liI) / 2 iliil1il1Il11iii1Ii = (iliil1il1Il11iii1Ii - iili1l11liiiI1il1il) / 2 IIiIli1I1li11iI111I = IIiIli1I1li11iI111I * 2 end if ilI1il1I1II1iI1ii1l < iliil1il1Il11iii1Ii then ilI1il1I1II1iI1ii1l = iliil1il1Il11iii1Ii end while ilI1il1I1II1iI1ii1l > 0 do local I1IiIlI1lIllI1I1liI = ilI1il1I1II1iI1ii1l % 2 if I1IiIlI1lIllI1I1liI > 0 then lIlllI1Il1lil1iI1iill = lIlllI1Il1lil1iI1iill + IIiIli1I1li11iI111I end ilI1il1I1II1iI1ii1l = (ilI1il1I1II1iI1ii1l - I1IiIlI1lIllI1I1liI) / 2 IIiIli1I1li11iI111I = IIiIli1I1li11iI111I * 2 end return lIlllI1Il1lil1iI1iill end local function llilIl1IlliIIIi1I1I(lIlll1111IlI1IlI111ii) local i11IlIIliiI1Il1i1Il = { iii1III1iIiIllll1il(llIII1IiIII11i11ili, IIll111iI1iIlIiillI, IIll111iI1iIlIiillI + 3) } IIll111iI1iIlIiillI = IIll111iI1iIlIiillI + 4 local ilI1il1I1II1iI1ii1l = lIiIii1IIl11ilIlliI(i11IlIIliiI1Il1i1Il[1], iil1i1lI1IiI1I1ilII) local iliil1il1Il11iii1Ii = lIiIii1IIl11ilIlliI(i11IlIIliiI1Il1i1Il[2], iil1i1lI1IiI1I1ilII) local lIlllI1Il1lil1iI1iill = lIiIii1IIl11ilIlliI(i11IlIIliiI1Il1i1Il[3], iil1i1lI1IiI1I1ilII) local lIl1ll1I1II11IlIilIlI = lIiIii1IIl11ilIlliI(i11IlIIliiI1Il1i1Il[4], iil1i1lI1IiI1I1ilII) iil1i1lI1IiI1I1ilII = (61 * iil1i1lI1IiI1I1ilII + lIlll1111IlI1IlI111ii) % 256 return lIl1ll1I1II11IlIilIlI * 16777216 + lIlllI1Il1lil1iI1iill * 65536 + iliil1il1Il11iii1Ii * 256 + ilI1il1I1II1iI1ii1l end local function iiilIlIl1ii1IIl1l11(lIliIi1111Ill1l1IlII1) local liillliilillIII11lI = I1lliIIIIl11l1I1I11() local lIlIiIi1I1illiI1i11il = "" for lIl11l1iI11liIllIl1i1 = I1iIli1iIIii1ii1I1I, liillliilillIII11lI do lIlIiIi1I1illiI1i11il = lIlIiIi1I1illiI1i11il .. IiI1Iii11iiil1lIl11(lIiIii1IIl11ilIlliI(iii1III1iIiIllll1il(llIII1IiIII11i11ili, IIll111iI1iIlIiillI + lIl11l1iI11liIllIl1i1 - 1), lIlli1ili111lil11l11i)) lIlli1ili111lil11l11i = (lIliIi1111Ill1l1IlII1 * lIlli1ili111lil11l11i + 35) % 256 end IIll111iI1iIlIiillI = IIll111iI1iIlIiillI + liillliilillIII11lI return lIlIiIi1I1illiI1i11il end lIlli1ili111lil11l11i = iI1ili1IIl1liIi111I() iil1i1lI1IiI1I1ilII = iI1ili1IIl1liIi111I() local li11Il1i11l1iIl1ii1 = {} for lIl11l1iI11liIllIl1i1 = I1iIli1iIIii1ii1I1I, iI1ili1IIl1liIi111I() do local lIlliii1iI1illIlliIii = iI1ili1IIl1liIi111I() local iIiIi11llIlIl1l111I = (lIl11l1iI11liIllIl1i1 - 1) * 2 li11Il1i11l1iIl1ii1[iIiIi11llIlIl1l111I] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, 1, 4) li11Il1i11l1iIl1ii1[iIiIi11llIlIl1l111I + 1] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, 5, 8) end local function II1i1l1IiiIIII1IliI() local IIiiil1lliliIi11l11 = { {}, nil, {}, {}, nil, nil, {} } iI1ili1IIl1liIi111I() local Il1liiIl1ii1l1iIlii = I1lliIIIIl11l1I1I11() - (#{ 246, 622, 1283, 4613, 767, 3406, 4873, 1797, 2467, 1108, 4615, 2107, 4654, 5703, 3246, 470, 2481, 5521, 4968, 3745, 5646 } + lIlIll1ii1IIIil1IiiII + 133582) local Il1I1lI1lI1lilil1lI = iI1ili1IIl1liIi111I() for lIl11l1iI11liIllIl1i1 = I1iIli1iIIii1ii1I1I, Il1liiIl1ii1l1iIlii do local lIlIIl1i11iIiI1i1l1ii = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIlliii1iI1illIlliIii = llilIl1IlliIIIi1I1I(Il1I1lI1lI1lilil1lI) lIlIIl1i11iIiI1i1l1ii[83921] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, #{ 2116, 6825, 44, 5210, 4300, 5580, 6520, 4415, 3542, 2364 }, #{ 5143, 2838, 2715, 4442, 2572, 727, 6238, 3424, 4462, 1923, 6684, 4294, 4830, 2906, 5339, 5214, 849, 4437 }) lIlIIl1i11iIiI1i1l1ii[2] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, #{ 6962, 5911, 877, 3413, 1233, 1625, 1404, 6514, 3225, 3757 }, #{ 3602, 4547, 759, 2586, 1082, 1348, 6045, 3074, 1378, 933, 2263, 808, 5735, 2803, 1227, 2996, 916, 5115 }) lIlIIl1i11iIiI1i1l1ii[10] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, #{4480}, #{ 4761, 4498, 2788, 5892, 727, 2332, 5418, 134, 904, 1479, 1275, 4685, 609, 3319, 5670, 5408, 2782, 2267 }) lIlIIl1i11iIiI1i1l1ii[7] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, #{ 5112, 6941, 3358, 6596, 1793, 6248, 5061, 176, 2783, 521, 4821, 5289, 5623, 295, 1410, 2627, 6570, 1324, 1249 }, #{ 3680, 368, 3374, 2195, 5324, 1010, 5400, 6556, 3698, 304, 6936, 1996, 2582, 5521, 165, 4498, 1172, 3915, 2174, 4238, 846 } + lIlIll1ii1IIIil1IiiII + -118) lIlIIl1i11iIiI1i1l1ii[9] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, #{ 260, 2759, 4623, 453, 474, 4100, 3822, 2564, 4362, 6274, 1996, 5363, 5154, 5069, 5150, 6774, 989, 2390, 1801, 2305, 6529 } + lIlIll1ii1IIIil1IiiII + -117, #{ 4206, 3883, 3867, 5199, 2575, 1623, 6428, 3353, 5739, 3642, 3749, 2534, 6895, 4378, 1503, 3555, 230, 626, 739, 3867, 4799, 6367, 1567 } + lIlIll1ii1IIIil1IiiII + -114) lIlIIl1i11iIiI1i1l1ii[8] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, #{3335}, #{ 4834, 1350, 2851, 5785, 2819, 2020, 4683, 6399, 4187 }) lIlIIl1i11iIiI1i1l1ii[117876] = i1IliiI1llllIiiIliI(lIlliii1iI1illIlliIii, #{ 3197, 2845, 1110, 4695, 4877, 2235, 3558, 4765, 1771, 4099, 1494, 6734, 4837, 2066, 158, 6775, 5138, 1046, 6298, 4506, 5949, 5121 } + lIlIll1ii1IIIil1IiiII + -118, #{ 3858, 2368, 360, 4474, 4915, 28, 5400, 4285, 5746, 6174, 470, 1678, 1834, 2834, 269, 609, 4629, 6492, 1915, 3331, 1448, 6018, 2338 } + lIlIll1ii1IIIil1IiiII + -114) IIiiil1lliliIi11l11[4][lIl11l1iI11liIllIl1i1] = lIlIIl1i11iIiI1i1l1ii end IIiiil1lliliIi11l11[5] = iI1ili1IIl1liIi111I() local il111I1I1i1liIiI11l = I1lliIIIIl11l1I1I11() for lIl11l1iI11liIllIl1i1 = I1iIli1iIIii1ii1I1I, il111I1I1i1liIiI11l do IIiiil1lliliIi11l11[7][lIl11l1iI11liIllIl1i1 - I1iIli1iIIii1ii1I1I] = II1i1l1IiiIIII1IliI() end I1lliIIIIl11l1I1I11() I1lliIIIIl11l1I1I11() iI1ili1IIl1liIi111I() IIiiil1lliliIi11l11[6] = iI1ili1IIl1liIi111I() local il111I1I1i1liIiI11l = I1lliIIIIl11l1I1I11() - (#{ 4515, 2290, 2093, 2733, 2170, 1897, 2872, 1453, 4111, 5927, 4043, 6602, 5812, 862, 2418, 3604, 1136, 101, 6298, 2408, 257 } + lIlIll1ii1IIIil1IiiII + 133562) local IliI1lI1lliiI1i1l1I = iI1ili1IIl1liIi111I() for lIl11l1iI11liIllIl1i1 = I1iIli1iIIii1ii1I1I, il111I1I1i1liIiI11l do local ilI1l11iIl1Il1l111l local liiili1II1iiIlIi111 = iI1ili1IIl1liIi111I() if liiili1II1iiIlIi111 == #{ 4538, 1428, 6227, 1769, 5207, 4706, 4304, 5822, 6921, 4767, 6147, 6504, 4894, 4080, 5948, 3565, 1657, 3498, 4778, 2662, 6848, 4077 } + lIlIll1ii1IIIil1IiiII + 15 then ilI1l11iIl1Il1l111l = ii1illl1l1lii1iIlIl(iiilIlIl1ii1IIl1l11(insEncKey), #{4027}) end if liiili1II1iiIlIi111 == #{ 5828, 21, 6234, 917, 4319, 5769, 1201, 3016, 4123, 2786, 1506, 2284, 5424, 3808, 3940, 1790, 6791, 2775, 1769, 5282, 4590, 5201, 6822, 3869 } + lIlIll1ii1IIIil1IiiII + 44 then ilI1l11iIl1Il1l111l = IiIIii1IIiIIlliiiiI() end if liiili1II1iiIlIi111 == #{ 6636, 6163, 866, 5622, 1726, 4778, 732, 5102, 221, 1808, 1491, 6202, 5037, 4372, 1234, 1944, 2905, 2492, 3156 } then ilI1l11iIl1Il1l111l = ii1illl1l1lii1iIlIl(iiilIlIl1ii1IIl1l11(IliI1lI1lliiI1i1l1I), #{3164}) end if liiili1II1iiIlIi111 == #{ 6408, 918, 4933, 4882, 3375, 5665, 3747, 2074, 448, 3757, 1204, 785, 3563, 1225, 3937, 3869, 4614, 3863, 3848, 1481, 1549 } + lIlIll1ii1IIIil1IiiII + 85 then ilI1l11iIl1Il1l111l = #{ 3172, 3825, 2362, 4642, 2659, 3644, 1604, 5735, 1463, 2539, 3465, 3456, 4932, 1430, 6529, 5176, 4100, 6045, 6741, 4569, 1732, 4379, 4800 } + lIlIll1ii1IIIil1IiiII + 68493 == #{ 536, 6010, 6401, 4928, 6195, 333, 4903, 5073, 1965, 6175, 6275, 3042, 1859, 6487, 4882, 1176, 1559, 2664, 898, 3933, 3063, 4646, 2911 } + lIlIll1ii1IIIil1IiiII + 29783 end if liiili1II1iiIlIi111 == #{ 1788, 5620, 6366, 897, 4340, 819, 156, 696, 4766 } then ilI1l11iIl1Il1l111l = #{ 3383, 5999, 6331, 1154, 250, 1354, 3969, 1882, 4969, 6436, 1665, 921, 6757, 5099, 3969, 2771, 2942, 607, 800, 3074 } + lIlIll1ii1IIIil1IiiII + 110009 == #{ 3383, 5999, 6331, 1154, 250, 1354, 3969, 1882, 4969, 6436, 1665, 921, 6757, 5099, 3969, 2771, 2942, 607, 800, 3074 } + lIlIll1ii1IIIil1IiiII + 110009 end if liiili1II1iiIlIi111 == #{ 2876, 123, 4117, 4241, 4821, 2775, 1179, 461, 6561, 596, 1503, 5524, 6647, 5309, 6087, 5570, 3873, 5424, 1465, 2338 } + lIlIll1ii1IIIil1IiiII + 36 then ilI1l11iIl1Il1l111l = ii1illl1l1lii1iIlIl(iiilIlIl1ii1IIl1l11(#{ 5309, 2283, 3822, 6555, 75, 5658, 4291, 4456, 3488, 3042, 1607, 3608, 5246, 4213, 6966, 4279, 3611, 693, 5851, 5861, 3291, 2643, 5502, 4009 } + lIlIll1ii1IIIil1IiiII + -27), #{3530}) end if liiili1II1iiIlIi111 == #{ 275, 4729, 3728, 5615, 3502, 216, 2212, 2157, 3677, 4619, 366, 1743, 2300, 2890, 3517, 1208, 4884, 2988, 376, 6309, 5352, 3421, 4959 } + lIlIll1ii1IIIil1IiiII + -21 then ilI1l11iIl1Il1l111l = iI1ili1IIl1liIi111I() end if liiili1II1iiIlIi111 == #{ 4334, 6635, 883, 2710, 1242, 2551, 3179, 6157, 3436, 4562, 1236, 4186, 3418, 629, 5887, 3272, 3373, 5931, 3620, 4388, 125, 742, 5385, 4078 } + lIlIll1ii1IIIil1IiiII + 45 then ilI1l11iIl1Il1l111l = ii1illl1l1lii1iIlIl(iiilIlIl1ii1IIl1l11(IliI1lI1lliiI1i1l1I), #{ 658, 6555, 504, 590, 6417 }) end if liiili1II1iiIlIi111 == #{ 6416, 5619, 647, 6654, 2419, 1083, 2973, 910, 5595, 2099, 6807, 2041, 3980, 5069, 2269, 6886, 5608, 5979, 4917, 320, 2288, 3541 } + lIlIll1ii1IIIil1IiiII + -46 then ilI1l11iIl1Il1l111l = iI1ili1IIl1liIi111I() end IIiiil1lliliIi11l11[3][lIl11l1iI11liIllIl1i1 - I1iIli1iIIii1ii1I1I] = ilI1l11iIl1Il1l111l end for lIl11l1iI11liIllIl1i1 = I1iIli1iIIii1ii1I1I, Il1liiIl1ii1l1iIlii do local lIlIIl1i11iIiI1i1l1ii = IIiiil1lliliIi11l11[4][lIl11l1iI11liIllIl1i1] local ll11ii1lli111III1ll = li11Il1i11l1iIl1ii1[lIlIIl1i11iIiI1i1l1ii[9]] if ll11ii1lli111III1ll == #{ 4048, 3183, 6837 } then if lIlIIl1i11iIiI1i1l1ii[8] > 255 then lIlIIl1i11iIiI1i1l1ii[6] = true lIlIIl1i11iIiI1i1l1ii[5] = IIiiil1lliliIi11l11[3][lIlIIl1i11iIiI1i1l1ii[8] - 256] end if lIlIIl1i11iIiI1i1l1ii[2] > 255 then lIlIIl1i11iIiI1i1l1ii[3] = true lIlIIl1i11iIiI1i1l1ii[1] = IIiiil1lliliIi11l11[3][lIlIIl1i11iIiI1i1l1ii[2] - 256] end end if ll11ii1lli111III1ll == #{ 2659, 6291, 3839, 3407 } then lIlIIl1i11iIiI1i1l1ii[4] = IIiiil1lliliIi11l11[3][lIlIIl1i11iIiI1i1l1ii[10]] end if ll11ii1lli111III1ll == #{1004} and lIlIIl1i11iIiI1i1l1ii[8] > 255 then lIlIIl1i11iIiI1i1l1ii[6] = true lIlIIl1i11iIiI1i1l1ii[5] = IIiiil1lliliIi11l11[3][lIlIIl1i11iIiI1i1l1ii[8] - 256] end if ll11ii1lli111III1ll == #{5226, 3467} and lIlIIl1i11iIiI1i1l1ii[2] > 255 then lIlIIl1i11iIiI1i1l1ii[3] = true lIlIIl1i11iIiI1i1l1ii[1] = IIiiil1lliliIi11l11[3][lIlIIl1i11iIiI1i1l1ii[2] - 256] end end local il111I1I1i1liIiI11l = I1lliIIIIl11l1I1I11() for lIl11l1iI11liIllIl1i1 = I1iIli1iIIii1ii1I1I, il111I1I1i1liIiI11l do IIiiil1lliliIi11l11[1][lIl11l1iI11liIllIl1i1] = I1lliIIIIl11l1I1I11() end I1lliIIIIl11l1I1I11() IIiiil1lliliIi11l11[2] = iI1ili1IIl1liIi111I() iI1ili1IIl1liIi111I() iI1ili1IIl1liIi111I() I1lliIIIIl11l1I1I11() return IIiiil1lliliIi11l11 end local function lIl11ii1l1l1iIiI111I1(IIiiil1lliliIi11l11, IlIill1iliIlIiIil11, Il11iiiii1lIiI11Ii1) local lIlllii1IiiIili1I1iIl, liliIll1iIlIlI1iil1 = 0, 2 local lIli1lIil1II1l1Iii1 = IIiiil1lliliIi11l11[4] local ii11IliiIlI11l1Ii1i = 2 local lI1lI11li11Il1l1il1 = IIiiil1lliliIi11l11[7] local lIlIililIliIIIIiII1iI = IIiiil1lliliIi11l11[6] local ilII1l1lI11iIil11II = IIiiil1lliliIi11l11[5] local ii1I1I1IIiI1lli11li = 9 local I1I11ilII11IllIiIil = IIiiil1lliliIi11l11[1] local lIliI1i1iIl1l1li1iIIl = 8 local function lIi1i1llIiill11iI11(...) local iillI11liiiiiiilIiI = 0 local IilI1ili111l1Ii1I1I = { IlIilIIIl1il1III11I({}, 1, ilII1l1lI11iIil11II) } local li1lliIlil11iIllI1i = 1 local lI1l1I1lIlI1i1i1il1 = {} local lIllll1lIl1Ii1li1i1Ii = {} local IlIill1iliIlIiIil11 = lIlII11IIll1l1lli1li1() local llI1i1ll1lIiIiiil11 = { ... } local lIliIlIil1I1l1iI1iilI = #llI1i1ll1lIiIiiil11 - 1 for lIl11l1iI11liIllIl1i1 = 0, lIliIlIil1I1l1iI1iilI do if lIl11l1iI11liIllIl1i1 < lIlIililIliIIIIiII1iI then IilI1ili111l1Ii1I1I[lIl11l1iI11liIllIl1i1] = llI1i1ll1lIiIiiil11[lIl11l1iI11liIllIl1i1 + 1] end end local function iilil1111ill11i1i1I(...) local lIlllI1Il1lil1iI1iill = illi1IIlli1Il1lII1I("#", ...) local l1iIi11Il1IiliiiIiI = { ... } return lIlllI1Il1lil1iI1iill, l1iIi11Il1IiliiiIiI end local function iI1IilI1IlliIlI1Il1() while true do local lIl11IIliliiIiIlll1Ii = lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] local lIll1lIiIIII1IIlIllIi = lIl11IIliliiIiIlll1Ii[9] li1lliIlil11iIllI1i = li1lliIlil11iIllI1i + 1 if lIll1lIiIIII1IIlIllIi >= 11 then if lIll1lIiIIII1IIlIllIi < 16 then if lIll1lIiIIII1IIlIllIi < 13 then if lIll1lIiIIII1IIlIllIi ~= 12 then for lIl11l1iI11liIllIl1i1 = lIl11IIliliiIiIlll1Ii[7], lIl11IIliliiIiIlll1Ii[8] do IilI1ili111l1Ii1I1I[lIl11l1iI11liIllIl1i1] = nil end else li1lliIlil11iIllI1i = li1lliIlil11iIllI1i + (lIl11IIliliiIiIlll1Ii[10] - iI1IIIll1lllIIIiIl1) end elseif lIll1lIiIIII1IIlIllIi < 14 then if lIl11IIliliiIiIlll1Ii[2] == 185 then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i - 1 lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] = { [9] = 17, [7] = (lIl11IIliliiIiIlll1Ii[7] - 30) % 256, [2] = (lIl11IIliliiIiIlll1Ii[8] - 30) % 256 } else local lIlll1llii1ilIiIllIl1 = lIl11IIliliiIiIlll1Ii[7] local il111I1I1i1liIiI11l = lIl11IIliliiIiIlll1Ii[8] local lIllIlIliIllil1ii1i11 = il111I1I1i1liIiI11l > 0 and il111I1I1i1liIiI11l - 1 or lIliIlIil1I1l1iI1iilI - lIlIililIliIIIIiII1iI if lIllIlIliIllil1ii1i11 < 0 then lIllIlIliIllil1ii1i11 = -1 end for lIl11l1iI11liIllIl1i1 = lIlll1llii1ilIiIllIl1, lIlll1llii1ilIiIllIl1 + lIllIlIliIllil1ii1i11 do IilI1ili111l1Ii1I1I[lIl11l1iI11liIllIl1i1] = llI1i1ll1lIiIiiil11[lIlIililIliIIIIiII1iI + (lIl11l1iI11liIllIl1i1 - lIlll1llii1ilIiIllIl1) + 1] end if il111I1I1i1liIiI11l == 0 then iillI11liiiiiiilIiI = lIlll1llii1ilIiIllIl1 + lIllIlIliIllil1ii1i11 for lIl11l1iI11liIllIl1i1 = iillI11liiiiiiilIiI + 1, ilII1l1lI11iIil11II do IilI1ili111l1Ii1I1I[lIl11l1iI11liIllIl1i1] = nil end end end elseif lIll1lIiIIII1IIlIllIi == 15 then local iliil1il1Il11iii1Ii, lIlllI1Il1lil1iI1iill if lIl11IIliliiIiIlll1Ii[6] then iliil1il1Il11iii1Ii = lIl11IIliliiIiIlll1Ii[5] else iliil1il1Il11iii1Ii = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[8]] end if lIl11IIliliiIiIlll1Ii[3] then lIlllI1Il1lil1iI1iill = lIl11IIliliiIiIlll1Ii[1] else lIlllI1Il1lil1iI1iill = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[2]] end IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = iliil1il1Il11iii1Ii - lIlllI1Il1lil1iI1iill else IlIill1iliIlIiIil11[lIl11IIliliiIiIlll1Ii[4]] = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] end elseif lIll1lIiIIII1IIlIllIi >= 19 then if lIll1lIiIIII1IIlIllIi < 20 then IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = lIl11IIliliiIiIlll1Ii[4] elseif lIll1lIiIIII1IIlIllIi == 21 then IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = IlIill1iliIlIiIil11[lIl11IIliliiIiIlll1Ii[4]] else local lIlllI1Il1lil1iI1iill if lIl11IIliliiIiIlll1Ii[3] then lIlllI1Il1lil1iI1iill = lIl11IIliliiIiIlll1Ii[1] else lIlllI1Il1lil1iI1iill = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[2]] end IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[8]][lIlllI1Il1lil1iI1iill] end elseif lIll1lIiIIII1IIlIllIi < 17 then local iliil1il1Il11iii1Ii, lIlllI1Il1lil1iI1iill if lIl11IIliliiIiIlll1Ii[6] then iliil1il1Il11iii1Ii = lIl11IIliliiIiIlll1Ii[5] else iliil1il1Il11iii1Ii = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[8]] end if lIl11IIliliiIiIlll1Ii[3] then lIlllI1Il1lil1iI1iill = lIl11IIliliiIiIlll1Ii[1] else lIlllI1Il1lil1iI1iill = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[2]] end IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]][iliil1il1Il11iii1Ii] = lIlllI1Il1lil1iI1iill elseif lIll1lIiIIII1IIlIllIi == 18 then Il11iiiii1lIiI11Ii1[lIl11IIliliiIiIlll1Ii[8]] = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] elseif lIl11IIliliiIiIlll1Ii[8] == 251 then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i - 1 lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] = { [9] = 11, [7] = (lIl11IIliliiIiIlll1Ii[7] - 92) % 256, [8] = (lIl11IIliliiIiIlll1Ii[2] - 92) % 256 } elseif lIl11IIliliiIiIlll1Ii[8] == 215 then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i - 1 lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] = { [9] = 2, [7] = (lIl11IIliliiIiIlll1Ii[7] - 112) % 256, [8] = (lIl11IIliliiIiIlll1Ii[2] - 112) % 256 } elseif lIl11IIliliiIiIlll1Ii[8] == 197 then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i - 1 lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] = { [9] = 8, [7] = (lIl11IIliliiIiIlll1Ii[7] - 241) % 256, [8] = (lIl11IIliliiIiIlll1Ii[2] - 241) % 256 } elseif not not IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] == (lIl11IIliliiIiIlll1Ii[2] == 0) then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i + 1 end elseif lIll1lIiIIII1IIlIllIi >= 5 then if lIll1lIiIIII1IIlIllIi < 8 then if lIll1lIiIIII1IIlIllIi < 6 then local lIliI1111iili1I1iIllI = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[8]] local lIlllI1Il1lil1iI1iill if lIl11IIliliiIiIlll1Ii[3] then lIlllI1Il1lil1iI1iill = lIl11IIliliiIiIlll1Ii[1] else lIlllI1Il1lil1iI1iill = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[2]] end IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7] + 1] = lIliI1111iili1I1iIllI IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = lIliI1111iili1I1iIllI[lIlllI1Il1lil1iI1iill] elseif lIll1lIiIIII1IIlIllIi ~= 7 then local I1i11ll1I1i1IlliIli = lI1lI11li11Il1l1il1[lIl11IIliliiIiIlll1Ii[10]] local ililliiilllIi11I1ll = {} if I1i11ll1I1i1IlliIli[ii11IliiIlI11l1Ii1i] > 0 then do local l1III1iiIIl11lii1Il = {} ililliiilllIi11I1ll = lIli1lI1i1lI111l1I11I({}, { __index = function(l1iIi11Il1IiliiiIiI, IiI11lii1l1I1lIIIli) local Ii11iill1IililIl1il = l1III1iiIIl11lii1Il[IiI11lii1l1I1lIIIli] return Ii11iill1IililIl1il[1][Ii11iill1IililIl1il[2]] end, __newindex = function(l1iIi11Il1IiliiiIiI, IiI11lii1l1I1lIIIli, lIiIlllIlll1lIil1Il) local Ii11iill1IililIl1il = l1III1iiIIl11lii1Il[IiI11lii1l1I1lIIIli] Ii11iill1IililIl1il[1][Ii11iill1IililIl1il[2]] = lIiIlllIlll1lIil1Il end }) for lIl11l1iI11liIllIl1i1 = 1, I1i11ll1I1i1IlliIli[ii11IliiIlI11l1Ii1i] do local lIlIiIIII11Illl11iI1I = lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] if lIlIiIIII11Illl11iI1I[ii1I1I1IIiI1lli11li] == lIlllii1IiiIili1I1iIl then l1III1iiIIl11lii1Il[lIl11l1iI11liIllIl1i1 - 1] = { IilI1ili111l1Ii1I1I, lIlIiIIII11Illl11iI1I[lIliI1i1iIl1l1li1iIIl] } elseif lIlIiIIII11Illl11iI1I[ii1I1I1IIiI1lli11li] == liliIll1iIlIlI1iil1 then l1III1iiIIl11lii1Il[lIl11l1iI11liIllIl1i1 - 1] = { Il11iiiii1lIiI11Ii1, lIlIiIIII11Illl11iI1I[lIliI1i1iIl1l1li1iIIl] } end li1lliIlil11iIllI1i = li1lliIlil11iIllI1i + 1 end if not lI1l1I1lIlI1i1i1il1[IilI1ili111l1Ii1I1I] then lI1l1I1lIlI1i1i1il1[IilI1ili111l1Ii1I1I] = {l1III1iiIIl11lii1Il} else Ii11lIiIiiIIi1Ii1i1(lI1l1I1lIlI1i1i1il1[IilI1ili111l1Ii1I1I], l1III1iiIIl11lii1Il) end end end local lIli1lIiiIli11li1lIlI = lIl11ii1l1l1iIiI111I1(I1i11ll1I1i1IlliIli, IlIill1iliIlIiIil11, ililliiilllIi11I1ll) IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = lIli1lIiiIli11li1lIlI else local lIlll1llii1ilIiIllIl1 = lIl11IIliliiIiIlll1Ii[7] local llI1i1ll1lIiIiiil11 = lIl11IIliliiIiIlll1Ii[8] local lll111ill1lI1iIliil = lIl11IIliliiIiIlll1Ii[2] local iIlilllliiiIi1ili1I, l1lIiIli1lillli1Ill, iI1IilI1IlliIlI1Il1 if llI1i1ll1lIiIiiil11 ~= 1 then if llI1i1ll1lIiIiiil11 ~= 0 then l1lIiIli1lillli1Ill = lIlll1llii1ilIiIllIl1 + llI1i1ll1lIiIiiil11 - 1 else l1lIiIli1lillli1Ill = iillI11liiiiiiilIiI end l1lIiIli1lillli1Ill, iIlilllliiiIi1ili1I = iilil1111ill11i1i1I(IilI1ili111l1Ii1I1I[lIlll1llii1ilIiIllIl1](IlIilIIIl1il1III11I(IilI1ili111l1Ii1I1I, lIlll1llii1ilIiIllIl1 + 1, l1lIiIli1lillli1Ill))) else l1lIiIli1lillli1Ill, iIlilllliiiIi1ili1I = iilil1111ill11i1i1I(IilI1ili111l1Ii1I1I[lIlll1llii1ilIiIllIl1]()) end if lll111ill1lI1iIliil ~= 1 then if lll111ill1lI1iIliil ~= 0 then l1lIiIli1lillli1Ill = lIlll1llii1ilIiIllIl1 + lll111ill1lI1iIliil - 2 iillI11liiiiiiilIiI = l1lIiIli1lillli1Ill + 1 else l1lIiIli1lillli1Ill = l1lIiIli1lillli1Ill + lIlll1llii1ilIiIllIl1 - 1 iillI11liiiiiiilIiI = l1lIiIli1lillli1Ill end iI1IilI1IlliIlI1Il1 = 0 for lIl11l1iI11liIllIl1i1 = lIlll1llii1ilIiIllIl1, l1lIiIli1lillli1Ill do iI1IilI1IlliIlI1Il1 = iI1IilI1IlliIlI1Il1 + 1 IilI1ili111l1Ii1I1I[lIl11l1iI11liIllIl1i1] = iIlilllliiiIi1ili1I[iI1IilI1IlliIlI1Il1] end else iillI11liiiiiiilIiI = lIlll1llii1ilIiIllIl1 - 1 end for lIl11l1iI11liIllIl1i1 = iillI11liiiiiiilIiI + 1, ilII1l1lI11iIil11II do IilI1ili111l1Ii1I1I[lIl11l1iI11liIllIl1i1] = nil end end elseif lIll1lIiIIII1IIlIllIi < 9 then lI1l1I1lIlI1i1i1il1[IilI1ili111l1Ii1I1I] = nil local lIlll1llii1ilIiIllIl1 = lIl11IIliliiIiIlll1Ii[7] local l1I11il1l1liI11l11i = lIl11IIliliiIiIlll1Ii[8] if l1I11il1l1liI11l11i == 1 then return true end local l1lIiIli1lillli1Ill = lIlll1llii1ilIiIllIl1 + l1I11il1l1liI11l11i - 2 if l1I11il1l1liI11l11i == 0 then l1lIiIli1lillli1Ill = iillI11liiiiiiilIiI end return true, lIlll1llii1ilIiIllIl1, l1lIiIli1lillli1Ill elseif lIll1lIiIIII1IIlIllIi ~= 10 then IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = lIl11IIliliiIiIlll1Ii[8] ~= 0 if lIl11IIliliiIiIlll1Ii[2] ~= 0 then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i + 1 end else local iliil1il1Il11iii1Ii, lIlllI1Il1lil1iI1iill if lIl11IIliliiIiIlll1Ii[6] then iliil1il1Il11iii1Ii = lIl11IIliliiIiIlll1Ii[5] else iliil1il1Il11iii1Ii = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[8]] end if lIl11IIliliiIiIlll1Ii[3] then lIlllI1Il1lil1iI1iill = lIl11IIliliiIiIlll1Ii[1] else lIlllI1Il1lil1iI1iill = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[2]] end if iliil1il1Il11iii1Ii == lIlllI1Il1lil1iI1iill ~= (lIl11IIliliiIiIlll1Ii[7] ~= 0) then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i + 1 end end elseif lIll1lIiIIII1IIlIllIi >= 2 then if lIll1lIiIIII1IIlIllIi < 3 then if lIl11IIliliiIiIlll1Ii[2] == 140 then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i - 1 lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] = { [9] = 3, [7] = (lIl11IIliliiIiIlll1Ii[7] - 83) % 256, [8] = (lIl11IIliliiIiIlll1Ii[8] - 83) % 256 } else IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = Il11iiiii1lIiI11Ii1[lIl11IIliliiIiIlll1Ii[8]] end elseif lIll1lIiIIII1IIlIllIi ~= 4 then if lIl11IIliliiIiIlll1Ii[2] == 233 then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i - 1 lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] = { [9] = 18, [7] = (lIl11IIliliiIiIlll1Ii[7] - 137) % 256, [8] = (lIl11IIliliiIiIlll1Ii[8] - 137) % 256 } else local IIi11IiIIIiiIl1i1iI = lIl11IIliliiIiIlll1Ii[7] local ilIlIliiIiIIliII1i1 = {} for lIlIl1IIiillIiI1i1I1l, l1III1iiIIl11lii1Il in pairs(lI1l1I1lIlI1i1i1il1[IilI1ili111l1Ii1I1I]) do for lIlIl1IIiillIiI1i1I1l, Ii11iill1IililIl1il in pairs(l1III1iiIIl11lii1Il) do if Ii11iill1IililIl1il[1] == IilI1ili111l1Ii1I1I and IIi11IiIIIiiIl1i1iI <= Ii11iill1IililIl1il[2] then local li1Ili1lIII1llIiIii = Ii11iill1IililIl1il[2] if not ilIlIliiIiIIliII1i1[li1Ili1lIII1llIiIii] then lIl11ii1l1l1iIiI111I1(lIllll1lIl1Ii1li1i1Ii, IilI1ili111l1Ii1I1I[li1Ili1lIII1llIiIii]) ilIlIliiIiIIliII1i1[li1Ili1lIII1llIiIii] = #lIllll1lIl1Ii1li1i1Ii end Ii11iill1IililIl1il[1] = lIllll1lIl1Ii1li1i1Ii Ii11iill1IililIl1il[2] = ilIlIliiIiIIliII1i1[li1Ili1lIII1llIiIii] end end end end elseif lIl11IIliliiIiIlll1Ii[8] == 183 then li1lliIlil11iIllI1i = li1lliIlil11iIllI1i - 1 lIli1lIil1II1l1Iii1[li1lliIlil11iIllI1i] = { [9] = 0, [7] = (lIl11IIliliiIiIlll1Ii[7] - 137) % 256, [8] = (lIl11IIliliiIiIlll1Ii[2] - 137) % 256 } else local lIlll1llii1ilIiIllIl1 = lIl11IIliliiIiIlll1Ii[7] local iIiIi11llIlIl1l111I = lIlll1llii1ilIiIllIl1 + 2 local l11lIllil11il1IIlI1 = { IilI1ili111l1Ii1I1I[lIlll1llii1ilIiIllIl1](IilI1ili111l1Ii1I1I[lIlll1llii1ilIiIllIl1 + 1], IilI1ili111l1Ii1I1I[lIlll1llii1ilIiIllIl1 + 2]) } for lIl11l1iI11liIllIl1i1 = 1, lIl11IIliliiIiIlll1Ii[2] do IilI1ili111l1Ii1I1I[iIiIi11llIlIl1l111I + lIl11l1iI11liIllIl1i1] = l11lIllil11il1IIlI1[lIl11l1iI11liIllIl1i1] end if IilI1ili111l1Ii1I1I[lIlll1llii1ilIiIllIl1 + 3] ~= nil then IilI1ili111l1Ii1I1I[lIlll1llii1ilIiIllIl1 + 2] = IilI1ili111l1Ii1I1I[lIlll1llii1ilIiIllIl1 + 3] else li1lliIlil11iIllI1i = li1lliIlil11iIllI1i + 1 end end elseif lIll1lIiIIII1IIlIllIi == 1 then local iliil1il1Il11iii1Ii, lIlllI1Il1lil1iI1iill if lIl11IIliliiIiIlll1Ii[6] then iliil1il1Il11iii1Ii = lIl11IIliliiIiIlll1Ii[5] else iliil1il1Il11iii1Ii = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[8]] end if lIl11IIliliiIiIlll1Ii[3] then lIlllI1Il1lil1iI1iill = lIl11IIliliiIiIlll1Ii[1] else lIlllI1Il1lil1iI1iill = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[2]] end IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = iliil1il1Il11iii1Ii + lIlllI1Il1lil1iI1iill else IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[7]] = IilI1ili111l1Ii1I1I[lIl11IIliliiIiIlll1Ii[8]] end end end local lIlI1lIli1iliiii1IIii, lIlIiIi1I1illiI1i11il, IIi11IiIIIiiIl1i1iI, iIIlIIll1iiIlIlII1l = I11iliil111lii1l1iI(iI1IilI1IlliIlI1Il1) if lIlI1lIli1iliiii1IIii then if IIi11IiIIIiiIl1i1iI then return IlIilIIIl1il1III11I(IilI1ili111l1Ii1I1I, IIi11IiIIIiiIl1i1iI, iIIlIIll1iiIlIlII1l) end else liilIillli1I11II1lI("Luraph Script:" .. (I1I11ilII11IllIiIil[li1lliIlil11iIllI1i - 1] or "") .. ": " .. lIlliiiI1lil111i1liII(lIlIiIi1I1illiI1i11il), 0) end end IlililI1lI1iilliIli(lIi1i1llIiill11iI11, IlIill1iliIlIiIil11) return lIi1i1llIiill11iI11 end local ilIlIliiIiIIliII1i1 = II1i1l1IiiIIII1IliI() return lIl11ii1l1l1iIiI111I1(ilIlIliiIiIIliII1i1, IlIill1iliIlIiIil11)() end lIlIil11IiI11llIlliI1("LPH!", lIlII11IIll1l1lli1li1()) 