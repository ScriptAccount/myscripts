-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local lIliII1l11IliiliIlIli = assert local I1ii1IllilI1llIiIli = select local ilil1iil1i1II1l1I11 = tonumber local lii11l1I11l1i111Ii1 = unpack local lIlI1llIIlI1I1iIIIil1 = pcall local i1IIlI1llIIlIlli1il = setfenv local iIl11llililiIiiii1I = setmetatable local lIi1iIl1li11iI11ilI = type local lIlIl111IiiiilIlII1iI = getfenv local iII1IiIlIIiI1iilIl1 = tostring local lillilIIIIil1Ii1iii = error local IililII1IiiI1lI1I1I = string.sub local Ill1I1IIiIIIlI1IIil = string.byte local i1li1lli1iIiIIIllil = string.char local IIiIlllilIlI1ilIll1 = string.rep local Iliili1Illiiill1li1 = string.gsub local IIilIIiiI1IIIililIl = string.match local iIllIliiiii1IIi1li1 = table.insert local lIl1iIlIllI1li1IIIil1 = Ill1I1IIiIIIlI1IIil("_", 1) local lIlIiII1IiiilIII1Iil1, liIll1i1i1lilll11II = #{4755}, #{ 6089, 1569, 5505, 6806, 5705, 2409, 1881, 4096, 4674, 2108, 2411, 5410, 1396, 6541, 5011, 164, 2279, 5939, 4720, 1579, 1748, 3716, 4908 } + lIl1iIlIllI1li1IIIil1 + 130953 local lIIlill1ii111liilll = {} local l1lIiIi1IlilIliiiIi = 1 local lIliilIl111I1iIi1Iiii, iil1I1l1i1l1i1llI11 local function lIlllI1IlIllIliIllli1(ill1Iil11I1IllI1lIi, IIilIlllIl1Ii11liiI) local I1I11IillliiIiillll ill1Iil11I1IllI1lIi = Iliili1Illiiill1li1(IililII1IiiI1lI1I1I(ill1Iil11I1IllI1lIi, 5), "..", function(lIlIili1i1IiiIiI11lIl) if Ill1I1IIiIIIlI1IIil(lIlIili1i1IiiIiI11lIl, 2) == 72 then I1I11IillliiIiillll = ilil1iil1i1II1l1I11(IililII1IiiI1lI1I1I(lIlIili1i1IiiIiI11lIl, 1, 1)) return "" else local lIl11li1illli11lIiIli = i1li1lli1iIiIIIllil(ilil1iil1i1II1l1I11(lIlIili1i1IiiIiI11lIl, 16)) if I1I11IillliiIiillll then local l1ll11iIIIlIiilll1i = IIiIlllilIlI1ilIll1(lIl11li1illli11lIiIli, I1I11IillliiIiillll) I1I11IillliiIiillll = nil return l1ll11iIIIlIiilll1i else return lIl11li1illli11lIiIli end end end) local function llilIillli1I11I11lI() local i1Il1lIIIlIilii1lI1 = Ill1I1IIiIIIlI1IIil(ill1Iil11I1IllI1lIi, l1lIiIi1IlilIliiiIi, l1lIiIi1IlilIliiiIi) l1lIiIi1IlilIliiiIi = l1lIiIi1IlilIliiiIi + 1 return i1Il1lIIIlIilii1lI1 end local function lIlIli1ilIiii11il1ll1() local i1Il1lIIIlIilii1lI1, lIl11li1illli11lIiIli, l1ll11iIIIlIiilll1i, I1I1iIiilIlIi1i1iIi = Ill1I1IIiIIIlI1IIil(ill1Iil11I1IllI1lIi, l1lIiIi1IlilIliiiIi, l1lIiIi1IlilIliiiIi + 3) l1lIiIi1IlilIliiiIi = l1lIiIi1IlilIliiiIi + 4 return I1I1iIiilIlIi1i1iIi * 16777216 + l1ll11iIIIlIiilll1i * 65536 + lIl11li1illli11lIiIli * 256 + i1Il1lIIIlIilii1lI1 end local function iilll1IliIiiIl1iiil(llIil1i1i1IIlIIlI1I, ii1I1il1iIIiII1iIii, Iiil1i1lIiIllii11lI) if Iiil1i1lIiIllii11lI then local llii11iiIiIl1l1lllI, lIl1l1I1li1ill11IIi1l = 0, 0 for IlliI1Il11i1l1I1llI = ii1I1il1iIIiII1iIii, Iiil1i1lIiIllii11lI do llii11iiIiIl1l1lllI = llii11iiIiIl1l1lllI + 2 ^ lIl1l1I1li1ill11IIi1l * iilll1IliIiiIl1iiil(llIil1i1i1IIlIIlI1I, IlliI1Il11i1l1I1llI) lIl1l1I1li1ill11IIi1l = lIl1l1I1li1ill11IIi1l + 1 end return llii11iiIiIl1l1lllI else local Iil11Ili1Ii1li1lIII = 2 ^ (ii1I1il1iIIiII1iIii - 1) return Iil11Ili1Ii1li1lIII <= llIil1i1i1IIlIIlI1I % (Iil11Ili1Ii1li1lIII + Iil11Ili1Ii1li1lIII) and 1 or 0 end end local function IIil1lill1ilIiIIIII() local i1Il1lIIIlIilii1lI1, lIl11li1illli11lIiIli = lIlIli1ilIiii11il1ll1(), lIlIli1ilIiii11il1ll1() if i1Il1lIIIlIilii1lI1 == 0 and lIl11li1illli11lIiIli == 0 then return 0 end return (-2 * iilll1IliIiiIl1iiil(lIl11li1illli11lIiIli, 32) + 1) * 2 ^ (iilll1IliIiiIl1iiil(lIl11li1illli11lIiIli, 21, 31) - 1023) * ((iilll1IliIiiIl1iiil(lIl11li1illli11lIiIli, 1, 20) * 4294967296 + i1Il1lIIIlIilii1lI1) / 4503599627370496 + 1) end local illIllII1li111iiiii = bit or bit32 local lIlllIllliIiliil11Il1 = illIllII1li111iiiii and illIllII1li111iiiii.bxor or function(i1Il1lIIIlIilii1lI1, lIl11li1illli11lIiIli) local i1liiiI1lIil1IIiill = 1 local l1ll11iIIIlIiilll1i = 0 while i1Il1lIIIlIilii1lI1 > 0 and lIl11li1illli11lIiIli > 0 do local lIlII1li1IiliI11Ilil1 = i1Il1lIIIlIilii1lI1 % 2 local lIl1iIi1lIlIl1l1ii1II = lIl11li1illli11lIiIli % 2 if lIlII1li1IiliI11Ilil1 ~= lIl1iIi1lIlIl1l1ii1II then l1ll11iIIIlIiilll1i = l1ll11iIIIlIiilll1i + i1liiiI1lIil1IIiill end i1Il1lIIIlIilii1lI1 = (i1Il1lIIIlIilii1lI1 - lIlII1li1IiliI11Ilil1) / 2 lIl11li1illli11lIiIli = (lIl11li1illli11lIiIli - lIl1iIi1lIlIl1l1ii1II) / 2 i1liiiI1lIil1IIiill = i1liiiI1lIil1IIiill * 2 end if i1Il1lIIIlIilii1lI1 < lIl11li1illli11lIiIli then i1Il1lIIIlIilii1lI1 = lIl11li1illli11lIiIli end while i1Il1lIIIlIilii1lI1 > 0 do local lIlII1li1IiliI11Ilil1 = i1Il1lIIIlIilii1lI1 % 2 if lIlII1li1IiliI11Ilil1 > 0 then l1ll11iIIIlIiilll1i = l1ll11iIIIlIiilll1i + i1liiiI1lIil1IIiill end i1Il1lIIIlIilii1lI1 = (i1Il1lIIIlIilii1lI1 - lIlII1li1IiliI11Ilil1) / 2 i1liiiI1lIil1IIiill = i1liiiI1lIil1IIiill * 2 end return l1ll11iIIIlIiilll1i end local function lIl1IIlilililillll11l(lIlI11iil1liIi1lI1i) local lliI1I11IliIi1Iiii1 = { Ill1I1IIiIIIlI1IIil(ill1Iil11I1IllI1lIi, l1lIiIi1IlilIliiiIi, l1lIiIi1IlilIliiiIi + 3) } l1lIiIi1IlilIliiiIi = l1lIiIi1IlilIliiiIi + 4 local i1Il1lIIIlIilii1lI1 = lIlllIllliIiliil11Il1(lliI1I11IliIi1Iiii1[1], iil1I1l1i1l1i1llI11) local lIl11li1illli11lIiIli = lIlllIllliIiliil11Il1(lliI1I11IliIi1Iiii1[2], iil1I1l1i1l1i1llI11) local l1ll11iIIIlIiilll1i = lIlllIllliIiliil11Il1(lliI1I11IliIi1Iiii1[3], iil1I1l1i1l1i1llI11) local I1I1iIiilIlIi1i1iIi = lIlllIllliIiliil11Il1(lliI1I11IliIi1Iiii1[4], iil1I1l1i1l1i1llI11) iil1I1l1i1l1i1llI11 = (181 * iil1I1l1i1l1i1llI11 + lIlI11iil1liIi1lI1i) % 256 return I1I1iIiilIlIi1i1iIi * 16777216 + l1ll11iIIIlIiilll1i * 65536 + lIl11li1illli11lIiIli * 256 + i1Il1lIIIlIilii1lI1 end local function li1il1ll1i1iIiIilil(lIlii1liII1lII1111IIl) local lIlii1Iii1iI1l1I1iiI1 = lIlIli1ilIiii11il1ll1() local lIli1l1IIi11IliI11ll1 = "" for IlliI1Il11i1l1I1llI = lIlIiII1IiiilIII1Iil1, lIlii1Iii1iI1l1I1iiI1 do lIli1l1IIi11IliI11ll1 = lIli1l1IIi11IliI11ll1 .. i1li1lli1iIiIIIllil(lIlllIllliIiliil11Il1(Ill1I1IIiIIIlI1IIil(ill1Iil11I1IllI1lIi, l1lIiIi1IlilIliiiIi + IlliI1Il11i1l1I1llI - 1), lIliilIl111I1iIi1Iiii)) lIliilIl111I1iIi1Iiii = (lIlii1liII1lII1111IIl * lIliilIl111I1iIi1Iiii + 185) % 256 end l1lIiIi1IlilIliiiIi = l1lIiIi1IlilIliiiIi + lIlii1Iii1iI1l1I1iiI1 return lIli1l1IIi11IliI11ll1 end lIliilIl111I1iIi1Iiii = llilIillli1I11I11lI() iil1I1l1i1l1i1llI11 = llilIillli1I11I11lI() local liII1i1iiII111iiIiI = {} for IlliI1Il11i1l1I1llI = lIlIiII1IiiilIII1Iil1, llilIillli1I11I11lI() do local lIil1IiII1iI11llll1 = llilIillli1I11I11lI() local I1iIiiIll11I11IlIiI = (IlliI1Il11i1l1I1llI - 1) * 2 liII1i1iiII111iiIiI[I1iIiiIll11I11IlIiI] = iilll1IliIiiIl1iiil(lIil1IiII1iI11llll1, 1, 4) liII1i1iiII111iiIiI[I1iIiiIll11I11IlIiI + 1] = iilll1IliIiiIl1iiil(lIil1IiII1iI11llll1, 5, 8) end local function iIi1iiIIlIi1li1iI11() local l1i1l1IiiliiIilliI1 = { {}, nil, {}, nil, {}, nil, {} } local iIll1iilliIIlIiiiI1 = lIlIli1ilIiii11il1ll1() - (#{ 1071, 4669, 482, 189, 968, 5605, 377, 899, 108, 4565, 528, 6956, 4270, 4031, 1119, 5929, 4146, 1848, 4812, 1197, 3086, 5277 } + lIl1iIlIllI1li1IIIil1 + 133614) local lIliiIlIi1iIlIl1iiiII = llilIillli1I11I11lI() for IlliI1Il11i1l1I1llI = lIlIiII1IiiilIII1Iil1, iIll1iilliIIlIiiiI1 do local IIIili1i1l1llI11I1l local lIi1iIl1li11iI11ilI = llilIillli1I11I11lI() if lIi1iIl1li11iI11ilI == #{ 6193, 1903, 3577, 4444, 5696, 3011, 6876, 5697, 1999, 1925, 3803, 3043, 4141, 779, 3842, 4330, 6080, 3865, 4699, 206, 195 } + lIl1iIlIllI1li1IIIil1 + 24 then IIIili1i1l1llI11I1l = IIil1lill1ilIiIIIII() end if lIi1iIl1li11iI11ilI == #{ 3117, 1560, 1554, 1041, 1417, 1214, 3120, 5109, 6678, 5536, 3313, 6175, 577, 6474, 3340, 4404, 4786, 4512, 4822, 6529, 6109, 3267 } + lIl1iIlIllI1li1IIIil1 + -3 then IIIili1i1l1llI11I1l = llilIillli1I11I11lI() + lIlIli1ilIiii11il1ll1() + IIil1lill1ilIiIIIII() end if lIi1iIl1li11iI11ilI == #{ 2443, 779, 5763, 686, 1702, 2684, 2681, 5362, 5873, 6491, 2408, 2668, 4370, 3008, 28, 5116, 1583, 1621, 6238, 5609, 3973, 6947, 5317, 6463 } + lIl1iIlIllI1li1IIIil1 + -44 then IIIili1i1l1llI11I1l = #{ 5348, 1285, 2582, 6592, 5131, 3469, 3391, 4074, 2978, 1754, 3120, 5658, 6729, 5043, 3111, 1772, 5449, 3984, 6819, 3350, 1976, 5273, 5297, 6686 } + lIl1iIlIllI1li1IIIil1 + 13675 == #{ 5348, 1285, 2582, 6592, 5131, 3469, 3391, 4074, 2978, 1754, 3120, 5658, 6729, 5043, 3111, 1772, 5449, 3984, 6819, 3350, 1976, 5273, 5297, 6686 } + lIl1iIlIllI1li1IIIil1 + 13675 end if lIi1iIl1li11iI11ilI == #{ 998, 3711, 429, 3239, 6512, 5525, 1236, 4258, 3008, 2528, 637, 3654, 5063, 2536, 1345, 5677, 6804, 2418, 907, 3973, 4202, 6651, 4446 } + lIl1iIlIllI1li1IIIil1 + 128 then IIIili1i1l1llI11I1l = #{ 6242, 1203, 1540, 5451, 5118, 4470, 2371, 1097, 4233, 4263, 282, 4004, 3569, 4663, 2659, 5151, 5193, 4513, 499, 4257, 858, 3370, 1133 } + lIl1iIlIllI1li1IIIil1 + 47562 == #{ 556, 3017, 3143, 5889, 2272, 6075, 6903, 2960, 4100, 2477, 5997, 2325, 5696, 1723, 3332, 3010, 462, 3779, 6488, 4407 } + lIl1iIlIllI1li1IIIil1 + 56426 end if lIi1iIl1li11iI11ilI == #{ 1321, 1117, 407, 1220, 1264, 4907, 6497, 6707, 3634, 1352, 6724, 5933, 3461, 4897, 3157, 4198, 253, 1503, 6130, 4877, 5021, 195 } + lIl1iIlIllI1li1IIIil1 + 95 then IIIili1i1l1llI11I1l = IIil1lill1ilIiIIIII() end if lIi1iIl1li11iI11ilI == #{ 4731, 6463, 1934, 6641, 4812, 2122, 920, 6827, 5391, 2980, 1275, 2840, 660, 4526, 5724, 4365, 4746, 4357, 6363, 5039, 5122, 1236, 2891, 3178 } + lIl1iIlIllI1li1IIIil1 + 130 then IIIili1i1l1llI11I1l = IililII1IiiI1lI1I1I(li1il1ll1i1iIiIilil(lIliiIlIi1iIlIl1iiiII), #{ 1777, 205, 3973 }) end if lIi1iIl1li11iI11ilI == #{ 715, 792, 5829, 3860, 4635, 1317, 4608, 5856, 302, 5798, 1392, 400, 5649, 3802, 116, 2822, 4734, 3814, 5000, 6013, 6517 } + lIl1iIlIllI1li1IIIil1 + -34 then IIIili1i1l1llI11I1l = llilIillli1I11I11lI() + lIlIli1ilIiii11il1ll1() + IIil1lill1ilIiIIIII() end if lIi1iIl1li11iI11ilI == #{ 2176, 61, 524, 4148, 3730, 2110, 2232, 4990, 4413, 1220, 6729, 1116, 3326, 6070, 2682, 5877, 3148, 675, 5324, 1460 } + lIl1iIlIllI1li1IIIil1 + 14 then IIIili1i1l1llI11I1l = lIlIli1ilIiii11il1ll1() end if lIi1iIl1li11iI11ilI == #{ 1507, 362, 5218, 5493, 2156, 1100, 3433, 891, 429, 1862, 5355, 1908, 6710, 1153, 6081, 4587, 203, 3558, 5585 } then IIIili1i1l1llI11I1l = lIlIli1ilIiii11il1ll1() end l1i1l1IiiliiIilliI1[1][IlliI1Il11i1l1I1llI - lIlIiII1IiiilIII1Iil1] = IIIili1i1l1llI11I1l end l1i1l1IiiliiIilliI1[2] = llilIillli1I11I11lI() local lIl1lilllliil1l111Ill = lIlIli1ilIiii11il1ll1() - (#{ 675, 1146, 566, 4607, 449, 6752, 6933, 4546, 1841, 5374, 3375, 1673, 3858, 6631, 5857, 6760, 4855, 3938, 5527, 3006, 3292, 278 } + lIl1iIlIllI1li1IIIil1 + 133665) local iIlIllil11Il111lil1 = llilIillli1I11I11lI() for IlliI1Il11i1l1I1llI = lIlIiII1IiiilIII1Iil1, lIl1lilllliil1l111Ill do local IlIliIlI11111lliI11 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIil1IiII1iI11llll1 = lIl1IIlilililillll11l(iIlIllil11Il111lil1) IlIliIlI11111lliI11[9] = iilll1IliIiiIl1iiil(lIil1IiII1iI11llll1, #{1782}, #{ 6402, 3116, 2955, 6424, 6822, 4058, 2898, 1398, 5336, 5789, 5902, 563, 2832, 4301, 520, 4266, 6258, 5411 }) IlIliIlI11111lliI11[5] = iilll1IliIiiIl1iiil(lIil1IiII1iI11llll1, #{1630}, #{ 4705, 1387, 2977, 1370, 4270, 40, 3217, 3984, 6704 }) IlIliIlI11111lliI11[10] = iilll1IliIiiIl1iiil(lIil1IiII1iI11llll1, #{ 154, 1053, 6306, 270, 4616, 4035, 3635, 4647, 2239, 6312, 1427, 3896, 1959, 609, 6202, 3776, 1961, 1359, 2796, 3408, 4251, 743, 2735, 4138 } + lIl1iIlIllI1li1IIIil1 + -92, #{ 932, 6099, 2434, 3875, 2052, 4289, 5593, 3867, 6133, 4224, 1455, 386, 1754, 2220, 3737, 4050, 2305, 2082, 3161, 2371, 406, 1787, 5472, 4621 } + lIl1iIlIllI1li1IIIil1 + -87) IlIliIlI11111lliI11[8] = iilll1IliIiiIl1iiil(lIil1IiII1iI11llll1, #{ 590, 3163, 1831, 2448, 6010, 3506, 660, 2285, 382, 6590, 3463, 5454, 3236, 37, 2423, 6868, 6591, 4171, 2605 }, #{ 3686, 5071, 4610, 6474, 6150, 2499, 3731, 6965, 1664, 6058, 5455, 4555, 1875, 258, 774, 2650, 3504, 4555, 2892, 2635, 1173, 342, 4382 } + lIl1iIlIllI1li1IIIil1 + -92) IlIliIlI11111lliI11[2] = iilll1IliIiiIl1iiil(lIil1IiII1iI11llll1, #{ 4941, 6659, 5836, 155, 2114, 6078, 431, 2094, 3274, 5967 }, #{ 2562, 2441, 4131, 5604, 3612, 6702, 1133, 68, 1821, 1361, 3032, 3306, 3289, 6541, 5017, 2115, 3634, 6245 }) l1i1l1IiiliiIilliI1[3][IlliI1Il11i1l1I1llI] = IlIliIlI11111lliI11 end for IlliI1Il11i1l1I1llI = lIlIiII1IiiilIII1Iil1, lIl1lilllliil1l111Ill do local IlIliIlI11111lliI11 = l1i1l1IiiliiIilliI1[3][IlliI1Il11i1l1I1llI] local lIlIill1llIli111lIIli = liII1i1iiII111iiIiI[IlIliIlI11111lliI11[10]] if lIlIill1llIli111lIIli == #{ 2252, 225, 4303, 6584 } then IlIliIlI11111lliI11[7] = l1i1l1IiiliiIilliI1[1][IlIliIlI11111lliI11[9]] end if lIlIill1llIli111lIIli == #{6535} and IlIliIlI11111lliI11[5] > 255 then IlIliIlI11111lliI11[1] = true IlIliIlI11111lliI11[3] = l1i1l1IiiliiIilliI1[1][IlIliIlI11111lliI11[5] - 256] end if lIlIill1llIli111lIIli == #{2202, 1905} and IlIliIlI11111lliI11[2] > 255 then IlIliIlI11111lliI11[4] = true IlIliIlI11111lliI11[6] = l1i1l1IiiliiIilliI1[1][IlIliIlI11111lliI11[2] - 256] end if lIlIill1llIli111lIIli == #{ 2065, 1268, 3408 } then if IlIliIlI11111lliI11[5] > 255 then IlIliIlI11111lliI11[1] = true IlIliIlI11111lliI11[3] = l1i1l1IiiliiIilliI1[1][IlIliIlI11111lliI11[5] - 256] end if IlIliIlI11111lliI11[2] > 255 then IlIliIlI11111lliI11[4] = true IlIliIlI11111lliI11[6] = l1i1l1IiiliiIilliI1[1][IlIliIlI11111lliI11[2] - 256] end end end local iIll1iilliIIlIiiiI1 = lIlIli1ilIiii11il1ll1() for IlliI1Il11i1l1I1llI = lIlIiII1IiiilIII1Iil1, iIll1iilliIIlIiiiI1 do l1i1l1IiiliiIilliI1[5][IlliI1Il11i1l1I1llI - lIlIiII1IiiilIII1Iil1] = iIi1iiIIlIi1li1iI11() end l1i1l1IiiliiIilliI1[6] = llilIillli1I11I11lI() llilIillli1I11I11lI() lIlIli1ilIiii11il1ll1() l1i1l1IiiliiIilliI1[4] = llilIillli1I11I11lI() llilIillli1I11I11lI() local iIll1iilliIIlIiiiI1 = lIlIli1ilIiii11il1ll1() for IlliI1Il11i1l1I1llI = lIlIiII1IiiilIII1Iil1, iIll1iilliIIlIiiiI1 do l1i1l1IiiliiIilliI1[7][IlliI1Il11i1l1I1llI] = lIlIli1ilIiii11il1ll1() end llilIillli1I11I11lI() lIlIli1ilIiii11il1ll1() lIlIli1ilIiii11il1ll1() return l1i1l1IiiliiIilliI1 end local function i1li1iI1iili11l1Ill(l1i1l1IiiliiIilliI1, IIilIlllIl1Ii11liiI, lII1iI1II1i1i1i1I1l) local lIliIlilIIlIiiiIlilii, iIii1lI1IlIl1lii11i = 0, 5 local lIl1iIllill1liIill111 = l1i1l1IiiliiIilliI1[3] local lIl111ili1l11Iil1I1ll = 6 local lIlllIIIil1Il11il1llI = l1i1l1IiiliiIilliI1[5] local Il1llIilIl1I1II1iI1 = l1i1l1IiiliiIilliI1[4] local lIlIii1i1ii1I1il1li1I = l1i1l1IiiliiIilliI1[2] local iIIIII11iIIi1iiII1I = 10 local lI1iiiliI1l1Iiil1il = l1i1l1IiiliiIilliI1[7] local II1Ii1IllIiI1l1Il1I = 5 local function IIi1llIiI1Iil1lI1i1(...) local lliiliII1l1111i1IlI = 0 local II11liiilI1111iiI11 = { lii11l1I11l1i111Ii1({}, 1, lIlIii1i1ii1I1il1li1I) } local ii1li1III11lI11ll1i = 1 local lIlIliI1IIiII1l1lIiiI = {} local lIl11I11Iil1ililII1I1 = {} local IIilIlllIl1Ii11liiI = lIlIl111IiiiilIlII1iI() local IIl111IIiIIili1lll1 = { ... } local IliIillIiII1Il1iii1 = #IIl111IIiIIili1lll1 - 1 for IlliI1Il11i1l1I1llI = 0, IliIillIiII1Il1iii1 do if IlliI1Il11i1l1I1llI < Il1llIilIl1I1II1iI1 then II11liiilI1111iiI11[IlliI1Il11i1l1I1llI] = IIl111IIiIIili1lll1[IlliI1Il11i1l1I1llI + 1] end end local function Ill1i11lillil1Il1Il(...) local l1ll11iIIIlIiilll1i = I1ii1IllilI1llIiIli("#", ...) local iiII11iIIiii1lllili = { ... } return l1ll11iIIIlIiilll1i, iiII11iIIiii1lllili end local function iil1l1IIi1lIl1I1i1l() while true do local lIlii11liilIilil1iiI1 = lIl1iIllill1liIill111[ii1li1III11lI11ll1i] local i1II1lil1iliI1iIllI = lIlii11liilIilil1iiI1[10] ii1li1III11lI11ll1i = ii1li1III11lI11ll1i + 1 if i1II1lil1iliI1iIllI >= 12 then if i1II1lil1iliI1iIllI >= 18 then if i1II1lil1iliI1iIllI >= 21 then if i1II1lil1iliI1iIllI >= 23 then if i1II1lil1iliI1iIllI == 24 then if lIlii11liilIilil1iiI1[2] == 141 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 5, [8] = (lIlii11liilIilil1iiI1[8] - 198) % 256, [5] = (lIlii11liilIilil1iiI1[5] - 198) % 256 } else II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = #II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end else local lIl11li1illli11lIiIli, l1ll11iIIIlIiilll1i if lIlii11liilIilil1iiI1[1] then lIl11li1illli11lIiIli = lIlii11liilIilil1iiI1[3] else lIl11li1illli11lIiIli = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end if lIlii11liilIilil1iiI1[4] then l1ll11iIIIlIiilll1i = lIlii11liilIilil1iiI1[6] else l1ll11iIIIlIiilll1i = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[2]] end II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = lIl11li1illli11lIiIli + l1ll11iIIIlIiilll1i end elseif i1II1lil1iliI1iIllI ~= 22 then if lIlii11liilIilil1iiI1[2] == 153 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 12, [8] = (lIlii11liilIilil1iiI1[8] - 147) % 256, [2] = (lIlii11liilIilil1iiI1[5] - 147) % 256 } else II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = not II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end else local ll1I1iliilllIl1il1l = lIlllIIIil1Il11il1llI[lIlii11liilIilil1iiI1[9]] local iiiiI1lllliiIlIll11 = {} if ll1I1iliilllIl1il1l[lIl111ili1l11Iil1I1ll] > 0 then do local liliiiiil1ilI1lill1 = {} iiiiI1lllliiIlIll11 = iIl11llililiIiiii1I({}, { __index = function(iiII11iIIiii1lllili, lIlili1I1lilllli111li) local lIliIlli1IIlil1i1iiiI = liliiiiil1ilI1lill1[lIlili1I1lilllli111li] return lIliIlli1IIlil1i1iiiI[1][lIliIlli1IIlil1i1iiiI[2]] end, __newindex = function(iiII11iIIiii1lllili, lIlili1I1lilllli111li, l1IiIl1Il1iIiIli11l) local lIliIlli1IIlil1i1iiiI = liliiiiil1ilI1lill1[lIlili1I1lilllli111li] lIliIlli1IIlil1i1iiiI[1][lIliIlli1IIlil1i1iiiI[2]] = l1IiIl1Il1iIiIli11l end }) for IlliI1Il11i1l1I1llI = 1, ll1I1iliilllIl1il1l[lIl111ili1l11Iil1I1ll] do local IlIl11I11i1iIliilll = lIl1iIllill1liIill111[ii1li1III11lI11ll1i] if IlIl11I11i1iIliilll[iIIIII11iIIi1iiII1I] == lIliIlilIIlIiiiIlilii then liliiiiil1ilI1lill1[IlliI1Il11i1l1I1llI - 1] = { II11liiilI1111iiI11, IlIl11I11i1iIliilll[II1Ii1IllIiI1l1Il1I] } elseif IlIl11I11i1iIliilll[iIIIII11iIIi1iiII1I] == iIii1lI1IlIl1lii11i then liliiiiil1ilI1lill1[IlliI1Il11i1l1I1llI - 1] = { lII1iI1II1i1i1i1I1l, IlIl11I11i1iIliilll[II1Ii1IllIiI1l1Il1I] } end ii1li1III11lI11ll1i = ii1li1III11lI11ll1i + 1 end if not lIlIliI1IIiII1l1lIiiI[II11liiilI1111iiI11] then lIlIliI1IIiII1l1lIiiI[II11liiilI1111iiI11] = {liliiiiil1ilI1lill1} else iIllIliiiii1IIi1li1(lIlIliI1IIiII1l1lIiiI[II11liiilI1111iiI11], liliiiiil1ilI1lill1) end end end local IIiIil1ili1llli1lIl = i1li1iI1iili11l1Ill(ll1I1iliilllIl1il1l, IIilIlllIl1Ii11liiI, iiiiI1lllliiIlIll11) II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = IIiIil1ili1llli1lIl end elseif i1II1lil1iliI1iIllI < 19 then local lIl1lIllIl1lIlliil1ll = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] local l1ll11iIIIlIiilll1i if lIlii11liilIilil1iiI1[4] then l1ll11iIIIlIiilll1i = lIlii11liilIilil1iiI1[6] else l1ll11iIIIlIiilll1i = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[2]] end II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8] + 1] = lIl1lIllIl1lIlliil1ll II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = lIl1lIllIl1lIlliil1ll[l1ll11iIIIlIiilll1i] elseif i1II1lil1iliI1iIllI == 20 then local lIl11li1illli11lIiIli, l1ll11iIIIlIiilll1i if lIlii11liilIilil1iiI1[1] then lIl11li1illli11lIiIli = lIlii11liilIilil1iiI1[3] else lIl11li1illli11lIiIli = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end if lIlii11liilIilil1iiI1[4] then l1ll11iIIIlIiilll1i = lIlii11liilIilil1iiI1[6] else l1ll11iIIIlIiilll1i = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[2]] end II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = lIl11li1illli11lIiIli - l1ll11iIIIlIiilll1i elseif lIlii11liilIilil1iiI1[2] == 14 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 0, [8] = (lIlii11liilIilil1iiI1[8] - 213) % 256, [5] = (lIlii11liilIilil1iiI1[5] - 213) % 256 } elseif lIlii11liilIilil1iiI1[2] == 68 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 21, [8] = (lIlii11liilIilil1iiI1[8] - 228) % 256, [5] = (lIlii11liilIilil1iiI1[5] - 228) % 256 } else II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = -II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end elseif i1II1lil1iliI1iIllI < 15 then if i1II1lil1iliI1iIllI >= 13 then if i1II1lil1iliI1iIllI == 14 then IIilIlllIl1Ii11liiI[lIlii11liilIilil1iiI1[7]] = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] elseif not not II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] == (lIlii11liilIilil1iiI1[2] == 0) then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i + 1 end elseif lIlii11liilIilil1iiI1[5] == 99 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 13, [8] = (lIlii11liilIilil1iiI1[8] - 107) % 256, [2] = (lIlii11liilIilil1iiI1[2] - 107) % 256 } else local i1IlIIiIi1IIIl11I1i = lIlii11liilIilil1iiI1[8] local I1iIiiIll11I11IlIiI = i1IlIIiIi1IIIl11I1i + 2 local lIlllii1IIli1l1i1ii11 = { II11liiilI1111iiI11[i1IlIIiIi1IIIl11I1i](II11liiilI1111iiI11[i1IlIIiIi1IIIl11I1i + 1], II11liiilI1111iiI11[i1IlIIiIi1IIIl11I1i + 2]) } for IlliI1Il11i1l1I1llI = 1, lIlii11liilIilil1iiI1[2] do II11liiilI1111iiI11[I1iIiiIll11I11IlIiI + IlliI1Il11i1l1I1llI] = lIlllii1IIli1l1i1ii11[IlliI1Il11i1l1I1llI] end if II11liiilI1111iiI11[i1IlIIiIi1IIIl11I1i + 3] ~= nil then II11liiilI1111iiI11[i1IlIIiIi1IIIl11I1i + 2] = II11liiilI1111iiI11[i1IlIIiIi1IIIl11I1i + 3] else ii1li1III11lI11ll1i = ii1li1III11lI11ll1i + 1 end end elseif i1II1lil1iliI1iIllI >= 16 then if i1II1lil1iliI1iIllI == 17 then if lIlii11liilIilil1iiI1[2] == 110 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 1, [8] = (lIlii11liilIilil1iiI1[8] - 71) % 256, [5] = (lIlii11liilIilil1iiI1[5] - 71) % 256 } else lII1iI1II1i1i1i1I1l[lIlii11liilIilil1iiI1[5]] = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] end else local lIl11li1illli11lIiIli, l1ll11iIIIlIiilll1i if lIlii11liilIilil1iiI1[1] then lIl11li1illli11lIiIli = lIlii11liilIilil1iiI1[3] else lIl11li1illli11lIiIli = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end if lIlii11liilIilil1iiI1[4] then l1ll11iIIIlIiilll1i = lIlii11liilIilil1iiI1[6] else l1ll11iIIIlIiilll1i = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[2]] end II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]][lIl11li1illli11lIiIli] = l1ll11iIIIlIiilll1i end else ii1li1III11lI11ll1i = ii1li1III11lI11ll1i + (lIlii11liilIilil1iiI1[9] - liIll1i1i1lilll11II) end elseif i1II1lil1iliI1iIllI < 6 then if i1II1lil1iliI1iIllI < 3 then if i1II1lil1iliI1iIllI >= 1 then if i1II1lil1iliI1iIllI ~= 2 then for IlliI1Il11i1l1I1llI = lIlii11liilIilil1iiI1[8], lIlii11liilIilil1iiI1[5] do II11liiilI1111iiI11[IlliI1Il11i1l1I1llI] = nil end else II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = IIilIlllIl1Ii11liiI[lIlii11liilIilil1iiI1[7]] end else II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end elseif i1II1lil1iliI1iIllI < 4 then II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = lIlii11liilIilil1iiI1[5] ~= 0 if lIlii11liilIilil1iiI1[2] ~= 0 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i + 1 end elseif i1II1lil1iliI1iIllI == 5 then if lIlii11liilIilil1iiI1[2] == 210 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 4, [8] = (lIlii11liilIilil1iiI1[8] - 177) % 256, [5] = (lIlii11liilIilil1iiI1[5] - 177) % 256 } else II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = lII1iI1II1i1i1i1I1l[lIlii11liilIilil1iiI1[5]] end elseif lIlii11liilIilil1iiI1[2] == 207 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 17, [8] = (lIlii11liilIilil1iiI1[8] - 131) % 256, [5] = (lIlii11liilIilil1iiI1[5] - 131) % 256 } elseif lIlii11liilIilil1iiI1[2] == 78 then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i - 1 lIl1iIllill1liIill111[ii1li1III11lI11ll1i] = { [10] = 10, [8] = (lIlii11liilIilil1iiI1[8] - 44) % 256, [5] = (lIlii11liilIilil1iiI1[5] - 44) % 256 } else local lillilII1I1il11IIi1 = lIlii11liilIilil1iiI1[8] local lIlIiiIiIl1111iIiiIli = {} for lIlIIi11IIiiiI1iilil1, liliiiiil1ilI1lill1 in pairs(lIlIliI1IIiII1l1lIiiI[II11liiilI1111iiI11]) do for lIlIIi11IIiiiI1iilil1, lIliIlli1IIlil1i1iiiI in pairs(liliiiiil1ilI1lill1) do if lIliIlli1IIlil1i1iiiI[1] == II11liiilI1111iiI11 and lillilII1I1il11IIi1 <= lIliIlli1IIlil1i1iiiI[2] then local liii1lIl1llIilIiIIl = lIliIlli1IIlil1i1iiiI[2] if not lIlIiiIiIl1111iIiiIli[liii1lIl1llIilIiIIl] then i1li1iI1iili11l1Ill(lIl11I11Iil1ililII1I1, II11liiilI1111iiI11[liii1lIl1llIilIiIIl]) lIlIiiIiIl1111iIiiIli[liii1lIl1llIilIiIIl] = #lIl11I11Iil1ililII1I1 end lIliIlli1IIlil1i1iiiI[1] = lIl11I11Iil1ililII1I1 lIliIlli1IIlil1i1iiiI[2] = lIlIiiIiIl1111iIiiIli[liii1lIl1llIilIiIIl] end end end end elseif i1II1lil1iliI1iIllI >= 9 then if i1II1lil1iliI1iIllI >= 10 then if i1II1lil1iliI1iIllI == 11 then local l1ll11iIIIlIiilll1i if lIlii11liilIilil1iiI1[4] then l1ll11iIIIlIiilll1i = lIlii11liilIilil1iiI1[6] else l1ll11iIIIlIiilll1i = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[2]] end II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]][l1ll11iIIIlIiilll1i] else lIlIliI1IIiII1l1lIiiI[II11liiilI1111iiI11] = nil local i1IlIIiIi1IIIl11I1i = lIlii11liilIilil1iiI1[8] local I1ll11liiIll1Il11il = lIlii11liilIilil1iiI1[5] if I1ll11liiIll1Il11il == 1 then return true end local iil1lI1iIIlIiIi111i = i1IlIIiIi1IIIl11I1i + I1ll11liiIll1Il11il - 2 if I1ll11liiIll1Il11il == 0 then iil1lI1iIIlIiIi111i = lliiliII1l1111i1IlI end return true, i1IlIIiIi1IIIl11I1i, iil1lI1iIIlIiIi111i end else local lIl11li1illli11lIiIli, l1ll11iIIIlIiilll1i if lIlii11liilIilil1iiI1[1] then lIl11li1illli11lIiIli = lIlii11liilIilil1iiI1[3] else lIl11li1illli11lIiIli = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end if lIlii11liilIilil1iiI1[4] then l1ll11iIIIlIiilll1i = lIlii11liilIilil1iiI1[6] else l1ll11iIIIlIiilll1i = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[2]] end if lIl11li1illli11lIiIli < l1ll11iIIIlIiilll1i ~= (lIlii11liilIilil1iiI1[8] ~= 0) then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i + 1 end end elseif i1II1lil1iliI1iIllI >= 7 then if i1II1lil1iliI1iIllI ~= 8 then II11liiilI1111iiI11[lIlii11liilIilil1iiI1[8]] = lIlii11liilIilil1iiI1[7] else local i1IlIIiIi1IIIl11I1i = lIlii11liilIilil1iiI1[8] local IIl111IIiIIili1lll1 = lIlii11liilIilil1iiI1[5] local ilIlIlIl11II1l1lIIl = lIlii11liilIilil1iiI1[2] local lIliIliiIl1I1iiil1Ili, iil1lI1iIIlIiIi111i, iil1l1IIi1lIl1I1i1l if IIl111IIiIIili1lll1 ~= 1 then if IIl111IIiIIili1lll1 ~= 0 then iil1lI1iIIlIiIi111i = i1IlIIiIi1IIIl11I1i + IIl111IIiIIili1lll1 - 1 else iil1lI1iIIlIiIi111i = lliiliII1l1111i1IlI end iil1lI1iIIlIiIi111i, lIliIliiIl1I1iiil1Ili = Ill1i11lillil1Il1Il(II11liiilI1111iiI11[i1IlIIiIi1IIIl11I1i](lii11l1I11l1i111Ii1(II11liiilI1111iiI11, i1IlIIiIi1IIIl11I1i + 1, iil1lI1iIIlIiIi111i))) else iil1lI1iIIlIiIi111i, lIliIliiIl1I1iiil1Ili = Ill1i11lillil1Il1Il(II11liiilI1111iiI11[i1IlIIiIi1IIIl11I1i]()) end if ilIlIlIl11II1l1lIIl ~= 1 then if ilIlIlIl11II1l1lIIl ~= 0 then iil1lI1iIIlIiIi111i = i1IlIIiIi1IIIl11I1i + ilIlIlIl11II1l1lIIl - 2 lliiliII1l1111i1IlI = iil1lI1iIIlIiIi111i + 1 else iil1lI1iIIlIiIi111i = iil1lI1iIIlIiIi111i + i1IlIIiIi1IIIl11I1i - 1 lliiliII1l1111i1IlI = iil1lI1iIIlIiIi111i end iil1l1IIi1lIl1I1i1l = 0 for IlliI1Il11i1l1I1llI = i1IlIIiIi1IIIl11I1i, iil1lI1iIIlIiIi111i do iil1l1IIi1lIl1I1i1l = iil1l1IIi1lIl1I1i1l + 1 II11liiilI1111iiI11[IlliI1Il11i1l1I1llI] = lIliIliiIl1I1iiil1Ili[iil1l1IIi1lIl1I1i1l] end else lliiliII1l1111i1IlI = i1IlIIiIi1IIIl11I1i - 1 end for IlliI1Il11i1l1I1llI = lliiliII1l1111i1IlI + 1, lIlIii1i1ii1I1il1li1I do II11liiilI1111iiI11[IlliI1Il11i1l1I1llI] = nil end end else local lIl11li1illli11lIiIli, l1ll11iIIIlIiilll1i if lIlii11liilIilil1iiI1[1] then lIl11li1illli11lIiIli = lIlii11liilIilil1iiI1[3] else lIl11li1illli11lIiIli = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[5]] end if lIlii11liilIilil1iiI1[4] then l1ll11iIIIlIiilll1i = lIlii11liilIilil1iiI1[6] else l1ll11iIIIlIiilll1i = II11liiilI1111iiI11[lIlii11liilIilil1iiI1[2]] end if lIl11li1illli11lIiIli == l1ll11iIIIlIiilll1i ~= (lIlii11liilIilil1iiI1[8] ~= 0) then ii1li1III11lI11ll1i = ii1li1III11lI11ll1i + 1 end end end end local liI11li1I1iIlli1lii, lIli1l1IIi11IliI11ll1, lillilII1I1il11IIi1, i1IillIi1iIilIIl1Il = lIlI1llIIlI1I1iIIIil1(iil1l1IIi1lIl1I1i1l) if liI11li1I1iIlli1lii then if lillilII1I1il11IIi1 then return lii11l1I11l1i111Ii1(II11liiilI1111iiI11, lillilII1I1il11IIi1, i1IillIi1iIilIIl1Il) end else lillilIIIIil1Ii1iii("Luraph Script:" .. (lI1iiiliI1l1Iiil1il[ii1li1III11lI11ll1i - 1] or "") .. ": " .. iII1IiIlIIiI1iilIl1(lIli1l1IIi11IliI11ll1), 0) end end i1IIlI1llIIlIlli1il(IIi1llIiI1Iil1lI1i1, IIilIlllIl1Ii11liiI) return IIi1llIiI1Iil1lI1i1 end local lIlIiiIiIl1111iIiiIli = iIi1iiIIlIi1li1iI11() return i1li1iI1iili11l1Ill(lIlIiiIiIl1111iIiiIli, IIilIlllIl1Ii11liiI)() end lIlllI1IlIllIliIlllilIlIl111IiiiilIlII1iI()) 